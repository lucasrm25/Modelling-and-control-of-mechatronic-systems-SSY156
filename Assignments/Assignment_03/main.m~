clear all; close all; clc;

calc_dynamics

%% Question 1 - Trajectory planning


% First two positions are ti and tf to next point. Next positions are joint angles
% qs = [ 0   0 0 0;
%        1   0 0 0;
%        3   0 pi/6 pi/6;
%        5   pi/4 0 pi/4;
%        7   0 pi/4 0;
%        9   pi/4 pi/4 pi/4];
   
% qs = [ 0  -0.6295 -0.2558 3.161      % 1   
%        2  -0.01275 -0.2342 2.993     % 5
%        3  -0.01275 -0.2342 2.993     % 5
%        5   0.361 -0.02856 2.364       % 9
%        6   0.361 -0.02856 2.364       % 9
%        8   0.6127 -0.2583 3.168       % 3
%        9   0.6127 -0.2583 3.168       % 3
%        11 -0.3619 -0.02611 2.363     % 7
%        12 -0.3619 -0.02611 2.363     % 7
%        14 -0.6295 -0.2558 3.161      % 1
%        15 -0.6295 -0.2558 3.161      % 1
%        ];
   
qs = [ 0  -0.6287 -0.2562 3.191      % 1
       2  -0.6287 -0.2562 3.191      % 1 
       4  -0.01028 -0.2411 3.023     % 5
       5  -0.01028 -0.2411 3.023     % 5
       7   0.3586 -0.03917 2.402     % 9
       8   0.3586 -0.03917 2.402     % 9
       10   0.602 -0.2652 3.197      % 3
       11   0.602 -0.2652 3.197      % 3
       13  -0.01028 -0.2411 3.023    % 5
       14  -0.01028 -0.2411 3.023    % 5
       16 -0.3614 -0.03509 2.393     % 7
       17 -0.3614 -0.03509 2.393     % 7
       19 -0.6287 -0.2562 3.191      % 1
       20 -0.6287 -0.2562 3.191      % 1
       ];
   
   
ddqc = 1;
dts = 0.05;

[tv,qv,dqv,ddqv] = traj_planning(qs, ddqc,dts);


figure('Color','white','Position',[228   414   839   394]);
ax1 = subplot(3,1,1);
plot(tv,qv, 'LineWidth',2); 
grid on, xlabel 't', ylabel 'q'
legend({'q1','q2','q3'},'Location','southeast')
ax2 = subplot(3,1,2);
plot(tv(1:end-1),dqv , 'LineWidth',2 );
grid on, xlabel 't', ylabel 'dq'
ax3 = subplot(3,1,3);
plot(tv(1:end-2), ddqv , 'LineWidth',2);
grid on, xlabel 't', ylabel 'ddq'
linkaxes([ax1,ax2,ax3],'x')
sgtitle('Configuration space trajectory planning')
% fp.savefig('trajectory_planning')



%% Question 2 - DESCENTRALIZED controller design

% Desired close loop performance:
zeta = 1;
wn = 20;

Bv =  subs(B, unkownvars, unkownvars_val);

Bbar = diag(diag(Bv));
for i=1:numel(Bbar)
    aux = children(vpa(Bbar(i)));
    Bbar(i) = sum(aux( ~has(aux,q) ));
end
Bbar = double(Bbar);

Km = diag(inv(fv));
Tm = diag(fv \ Bbar);

Tv = Tm;
Kv = 2*zeta*wn./Km;
Kp = wn^2./Km./Kv;


q0  = qs(1,2:4)';
dq0 = [0 0 0]';

try
    simdata = sim('omnibundle_descentr_joint.slx','StopTime', num2str(qs(end,1)));
    simdata = simdata.simdata;
catch exception
    error(exception.message);
end


figure('Color','white','Position',[228   414   839   394]);
ax1 = subplot(3,1,1);
plot(simdata.time(:,1), simdata.signals(1).values(:,:), 'LineWidth',2 )
grid on, xlabel 't', ylabel 'q measured'
legend({'q1','q2','q3'},'Location','southeast')
ax2 = subplot(3,1,2);
plot(simdata.time(:,1), simdata.signals(2).values(:,:), 'LineWidth',2 )
grid on, xlabel 't', ylabel 'q reference'
ax2.YLim = ax1.YLim;
ax3 = subplot(3,1,3);
plot(simdata.time(:,1), abs(simdata.signals(3).values(:,:)), 'LineWidth',2 )
grid on, xlabel 't', ylabel 'error'
linkaxes([ax1,ax2,ax3],'x')
sgtitle('Decentralized configuration space control')
% fp.savefig('dec_control')


close all;
animate


%% Question 4 - CENTRALIZED controller design



q0  = qs(1,2:4)';
dq0 = [0 0 0]';
tau_d = [0;0;0];

try
    simdata = sim('omnibundle_centr_joint.slx','StopTime', num2str(qs(end,1)));
    simdata = simdata.simdata;
catch exception
    error(exception.message);
end


figure('Color','white','Position',[228   414   839   394]);
ax1 = subplot(3,1,1);
plot(simdata.time(:,1), simdata.signals(1).values(:,:), 'LineWidth',2 )
grid on, xlabel 't', ylabel 'q measured'
legend({'q1','q2','q3'},'Location','southeast')
ax2 = subplot(3,1,2);
plot(simdata.time(:,1), simdata.signals(2).values(:,:), 'LineWidth',2 )
grid on, xlabel 't', ylabel 'q reference'
ax2.YLim = ax1.YLim;
ax3 = subplot(3,1,3);
plot(simdata.time(:,1), abs(simdata.signals(3).values(:,:)), 'LineWidth',2 )
grid on, xlabel 't', ylabel 'error'
linkaxes([ax1,ax2,ax3],'x')
sgtitle('Centralized inverse-dynamics control')
% fp.savefig('centr_control')

close all;
animate


%% Question 5 - Disturbance effect

syms d
tau_d = [0;d;0];
simplify(B \ tau_d)

q0  = qs(1,2:4)';
dq0 = [0 0 0]';
tau_d = [0;0.1;0];

try
    simdata = sim('omnibundle_centr_joint.slx','StopTime', num2str(qs(end,1)));
    simdata = simdata.simdata;
catch exception
    error(exception.message);
end


figure('Color','white','Position',[507   528   520   143]);
hold on;
plot(simdata.time(:,1), simdata.signals(1).values(:,1), 'LineWidth',2 )
plot(simdata.time(:,1), simdata.signals(2).values(:,1), 'LineWidth',2 )
plot(simdata.time(:,1), abs(simdata.signals(3).values(:,1)), 'LineWidth',2 )
grid on, xlabel 't', ylabel 'q'
legend({'q measured','q reference','error'},'Location','northwest')
fp.savefig('centr_control_dist')


%% Question 6 - Operational Space Trajectory Planning


pes = [0   0.098 -0.078 -0.1;
       2   0.098 -0.078 -0.1;
       7   0.2 0 0;
       27   0.2 0 0];

ddpec = 0.5;
dts = 0.1;
[te,pev,dpev,ddpev] = traj_planning(pes, ddpec, dts);

figure('Color','white','Position',[228   414   839   394]);
ax1 = subplot(3,1,1);
plot(te,pev, 'LineWidth',2); 
grid on, xlabel 't', ylabel 'x_e'
legend({'x','y','z'},'Location','southeast')
ax2 = subplot(3,1,2);
plot(tv(1:end-1),dpev , 'LineWidth',2 );
grid on, xlabel 't', ylabel 'dx_e'
ax3 = subplot(3,1,3);
plot(tv(1:end-2), ddpev , 'LineWidth',2);
grid on, xlabel 't', ylabel 'ddx_e'
linkaxes([ax1,ax2,ax3],'x')
sgtitle('Operational space trajectory planning')
fp.savefig('trajectory_planning_op_space')


%% Question 7 -Operational Space Centralized Control

q0  = vpasolve(dir_kin_omni_bundle_fun(q)  - pes(1,2:4)');
q0 = double([q0.q1; q0.q2; q0.q3]);
dq0 = [0 0 0]';

tau_d = [0;0;0];


try
    aux = sim('omnibundle_centr_operspace.slx','StopTime', num2str(pes(end,1)));
    simdata = aux.simdata;
    simdata_xe = aux.simdata_xe;
catch exception
    error(exception.message);
end


figure('Color','white','Position',[228   414   839   394]);
ax1 = subplot(3,1,1);
plot(simdata_xe.time(:,1), simdata_xe.signals(2).values(:,:), 'LineWidth',2 )
grid on, xlabel 't', ylabel 'x_e measured'
legend({'x_e','y_e','z_e'},'Location','southeast')
ax2 = subplot(3,1,2);
plot(simdata_xe.time(:,1), simdata_xe.signals(1).values(:,:), 'LineWidth',2 )
grid on, xlabel 't', ylabel 'x_e reference'
ax2.YLim = ax1.YLim;
ax3 = subplot(3,1,3);
plot(simdata_xe.time(:,1), abs(simdata_xe.signals(3).values(:,:)), 'LineWidth',2 )
grid on, xlabel 't', ylabel 'error'
linkaxes([ax1,ax2,ax3],'x')
sgtitle('Centralized inverse-dynamics operational-space control')
% fp.savefig('centr_control_opsp')


qs = [0 0 0 0];
animate





